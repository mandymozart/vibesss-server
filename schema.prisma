// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource mysql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "mysql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(cuid())
  name      String    @default("")
  email     String    @unique @default("")
  password  String
  sessions  Session[] @relation("Session_author")
  presets   Preset[]  @relation("Preset_author")
  createdAt DateTime? @default(now())
}

model Preset {
  id          String    @id @default(cuid())
  title       String    @default("")
  slug        String    @unique @default("")
  preset_json Json?     @map("preset_json")
  sessions    Session[] @relation("Preset_sessions")
  groups      Group[]   @relation("Group_presets")
  contents    Content[] @relation("Content_presets")
  author      User?     @relation("Preset_author", fields: [authorId], references: [id])
  authorId    String?   @map("author")
  tags        Tag[]     @relation("Preset_tags")

  @@index([authorId])
}

model Content {
  id      String   @id @default(cuid())
  note    Int      @default(0)
  presets Preset[] @relation("Content_presets")
  media   Media?   @relation("Content_media", fields: [mediaId], references: [id])
  mediaId String?  @map("media")

  @@index([mediaId])
}

model Group {
  id      String   @id @default(cuid())
  name    String   @default("")
  channel Int      @default(0)
  presets Preset[] @relation("Group_presets")
}

model Media {
  id              String        @id @default(cuid())
  content         Content[]     @relation("Content_media")
  text            String        @default("")
  file_filesize   Int?
  file_filename   String?
  image_id        String?
  image_filesize  Int?
  image_width     Int?
  image_height    Int?
  image_extension String?
  url             String        @default("")
  type            MediaTypeType @unique @default(onomatopoeia) @map("media_type")
}

model Session {
  id           String   @id @default(cuid())
  title        String   @default("")
  slug         String   @unique @default("")
  session_json Json?    @map("session_json")
  presets      Preset[] @relation("Preset_sessions")
  author       User?    @relation("Session_author", fields: [authorId], references: [id])
  authorId     String?  @map("author")
  tags         Tag[]    @relation("Session_tags")

  @@index([authorId])
}

model Tag {
  id       String    @id @default(cuid())
  name     String    @default("")
  presets  Preset[]  @relation("Preset_tags")
  sessions Session[] @relation("Session_tags")
}

enum MediaTypeType {
  onomatopoeia
  image
  audio
  video
  score
  svg
  text
}
